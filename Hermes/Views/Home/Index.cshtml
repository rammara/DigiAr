@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Тестовое задание</h1>
</div>




<div class="row mt-2">
    <div class="col-5 offset-1">
        <h4>Получение котировок:</h4>
        <form class="form" id="formStoreQuote" method="post">
            <label for="inputExchange">Биржа:</label>
            <input type="text" class="form-control form-control-sm" id="inputExchange" name="exchange" value="@TempData["ExchangeUrl"]" />
            <label for="inputStorage">Хранилище:</label>
            <input type="text" class="form-control form-control-sm" id="inputStorage" name="storage" value="@TempData["StorageUrl"]" />

            <label for="inputName">Введите имя котировки:</label>
            <input type="text" class="form-control form-control-sm" id="inputName" name="name" required placeholder="Введите имя котировки" />
            <button class="btn btn-primary mt-1" type="submit" id="btnSubmit">Получить</button>
        </form>
        <div id="result"></div>
    </div>
    <div class="col-5 offset-1">
        <h4 id="sentQuotes">Отправленные котировки</h4>
        <ul id="quoteList"></ul>
    </div>
</div>

<hr />

<div class="row mt-4">
    <div class="col-5 offset-1">
        <h4>Получение разницы</h4>
        <form class="form" id="formGetDiff" method="post">
            <label for="inputA">Котировка А:</label>
            <input type="text" class="form-control form-control-sm" id="inputA" name="quotea"/>
            <label for="inputB">Котировка Б:</label>
            <input type="text" class="form-control form-control-sm" id="inputB" name="quoteb" />
            <label for="time">Время:</label>
            <div class="input-group mb-3">
                <input type="time" class="form-control form-control-sm" step="1" id="timeInput" name="time" required />
                <button class="btn btn-outline-secondary" type="button" onclick="setCurrentTime()">Текущее время</button>
            </div>

            <button class="btn btn-primary mt-1" type="submit" id="btnDiff">Получить</button>
        </form>
    </div>
    <div class="col-5 offset-1">
        <h4>Результат</h4>
        <div id="diffresult"></div>
    </div>
</div>


<script type="text/javascript">
    function setCurrentTime()
    {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0'); 
        const timeValue = `${hours}:${minutes}`; 
        document.getElementById('timeInput').value = timeValue; 
    }

    document.getElementById('formStoreQuote').addEventListener('submit', function (event) {
        event.preventDefault(); 

        const inputName = document.getElementById('inputName');
        const resultDiv = document.getElementById('result');
        const quoteList = document.getElementById('quoteList');

        if (inputName.value.trim() === '') {
            alert('Пожалуйста, введите имя котировки.');
            return;
        }
        resultDiv.style.display = 'none';
        fetch('Home/StoreQuote', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams(new FormData(this)) 
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Ошибка отправки: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log(data); 
                const li = document.createElement('li');
                li.textContent = `${data.name}: ${data.price}`;
                quoteList.appendChild(li);
                resultDiv.innerHTML = `<strong>Котировка успешно получена!</strong><br>Имя: ${data.name}<br>Цена: ${data.price}`;
                resultDiv.style.display = 'block'; 
            })
            .catch(error => {
                console.error('There has been a problem with your fetch operation:', error);
                resultDiv.innerHTML = '<strong>Ошибка при получении котировки.</strong>';
                resultDiv.style.display = 'block'; 
            });
    });

    document.getElementById('formGetDiff').addEventListener('submit', function (event)
    {
        event.preventDefault(); 

        const resultElement = document.getElementById('diffresult');

        fetch('/Home/GetDifference', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams(new FormData(this))
        })
            .then(response =>
            {
                if (!response.ok)
                {
                    switch (response.status)
                    {
                        case 400:
                            throw new Error('Ошибка в запросе.');
                        case 500:
                            throw new Error('Ошибка на сервере.');
                        case 503:
                            throw new Error('Сервис временно недоступен.');
                        default:
                            throw new Error('Неизвестная ошибка.');
                    }
                }
                return response.json();
            })
            .then(data =>
            {
                if (data.result)
                {
                    resultElement.innerHTML = data.result;
                } else
                {
                    resultElement.innerHTML = 'Не удалось получить разницу.';
                }
            })
            .catch(error =>
            { 
                console.error('Fetch Error:', error);
                resultElement.innerHTML = error.message;
            });
    });

</script>

